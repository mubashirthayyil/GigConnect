{"ast":null,"code":"{/*import React, { useState } from 'react';\r\n import { postGig } from '../services/api';\r\n import { useNavigate } from 'react-router-dom';\r\n import { Button, TextField, Typography, Container, Box } from '@mui/material';\r\n \n export default function CreateGig() {\r\n  const [form, setForm] = useState({\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n    category: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n \n  function handleChange(e) {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  }\r\n \n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    postGig(form)\r\n      .then(() => {\r\n        alert('Gig posted successfully!');\r\n        navigate('/create-gig');\r\n      })\r\n      .catch(err => setError(err.response?.data?.message || 'Posting failed'));\r\n  }\r\n \n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box sx={{ mt: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Post a New Gig\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            value={form.title}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            value={form.description}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            multiline\r\n            required\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Price\"\r\n            name=\"price\"\r\n            value={form.price}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            type=\"number\"\r\n            required\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Category\"\r\n            name=\"category\"\r\n            value={form.category}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Post Gig\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n      <button onClick={() => navigate(-1)}>Back</button>\r\n    </Container>\r\n    /*<div style={{ margin: '20px' }}>\r\n      <h1>Post a New Gig</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"title\" placeholder=\"Gig Title\" value={form.title} onChange={handleChange} required />\r\n        <textarea name=\"description\" placeholder=\"Gig Description\" value={form.description} onChange={handleChange} required />\r\n        <input name=\"price\" type=\"number\" placeholder=\"Price\" value={form.price} onChange={handleChange} required />\r\n        <input name=\"category\" placeholder=\"Category\" value={form.category} onChange={handleChange} required />\r\n        <button type=\"submit\">Post Gig</button>\r\n      </form>\r\n    </div>\r\n  );\r\n }\r\n */}","map":{"version":3,"names":[],"sources":["E:/C/Projects/GigConnect Zaalima/gigconnect/frontend/src/pages/CreateGig.js"],"sourcesContent":["{/*import React, { useState } from 'react';\r\nimport { postGig } from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, TextField, Typography, Container, Box } from '@mui/material';\r\n\r\nexport default function CreateGig() {\r\n  const [form, setForm] = useState({\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n    category: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  function handleChange(e) {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    postGig(form)\r\n      .then(() => {\r\n        alert('Gig posted successfully!');\r\n        navigate('/create-gig');\r\n      })\r\n      .catch(err => setError(err.response?.data?.message || 'Posting failed'));\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box sx={{ mt: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Post a New Gig\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            value={form.title}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            value={form.description}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            multiline\r\n            required\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Price\"\r\n            name=\"price\"\r\n            value={form.price}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            type=\"number\"\r\n            required\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Category\"\r\n            name=\"category\"\r\n            value={form.category}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Post Gig\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n      <button onClick={() => navigate(-1)}>Back</button>\r\n    </Container>\r\n    /*<div style={{ margin: '20px' }}>\r\n      <h1>Post a New Gig</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"title\" placeholder=\"Gig Title\" value={form.title} onChange={handleChange} required />\r\n        <textarea name=\"description\" placeholder=\"Gig Description\" value={form.description} onChange={handleChange} required />\r\n        <input name=\"price\" type=\"number\" placeholder=\"Price\" value={form.price} onChange={handleChange} required />\r\n        <input name=\"category\" placeholder=\"Category\" value={form.category} onChange={handleChange} required />\r\n        <button type=\"submit\">Post Gig</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n*/}"],"mappingsnGC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}