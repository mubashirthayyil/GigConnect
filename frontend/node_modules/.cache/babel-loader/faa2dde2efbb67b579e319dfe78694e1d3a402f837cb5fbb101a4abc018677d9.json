{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getGigs, deleteGig } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Gigs.css';\nimport { FaEdit, FaTrash, FaArrowLeft, FaBriefcase } from 'react-icons/fa';\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nexport default function Gigs() {\n  _s();\n  const [gigs, setGigs] = useState([]);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const {\n    user\n  } = useContext(AuthContext);\n\n  /*const fetchGigs = () => {\r\n    getGigs()\r\n      .then((res) => setGigs(res.data))\r\n      .catch((err) =>\r\n        setError(err.response?.data?.message || 'Failed to load gigs')\r\n      );\r\n  };\r\n  const fetchGigs = () => {\r\n    getGigs()\r\n      .then((res) => {\r\n        let gigsData;\r\n          if (user.role === 'client') {\r\n          // Clients see only their own gigs\r\n          gigsData = res.data.filter((gig) => gig.postedBy._id === user._id);\r\n        } else {\r\n          // Other roles see all gigs\r\n          gigsData = res.data;\r\n        }\r\n          setGigs(gigsData);\r\n      })\r\n      .catch((err) =>\r\n        setError(err.response?.data?.message || 'Failed to load gigs')\r\n      );\r\n  };\r\n  \r\n  useEffect(() => {\r\n    fetchGigs();\r\n  }, []);\r\n    const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this gig?')) {\r\n      deleteGig(id)\r\n        .then(() => fetchGigs())\r\n        .catch(() => alert('Delete failed'));\r\n    }\r\n  };\r\n    return (\r\n    <div className=\"gigs-container\">\r\n      <div className=\"gigs-header\">\r\n        <h1>\r\n          <FaBriefcase /> Available Gigs\r\n        </h1>\r\n        <button className=\"back-btn\" onClick={() => navigate(-1)}>\r\n          <FaArrowLeft /> Back\r\n        </button>\r\n      </div>\r\n        {error && <div className=\"error-box\">{error}</div>}\r\n        <div className=\"gig-list\">\r\n        {gigs.length > 0 ? (\r\n          gigs.map((gig) => (\r\n            <div key={gig._id} className=\"gig-card\" onClick={() => navigate(`/gigs/${gig._id}`)}>\r\n              <h3 className=\"gig-title\">\r\n                {gig.title}\r\n              </h3>\r\n              <p className=\"gig-desc\">\r\n                {gig.description\r\n                  ? gig.description.substring(0, 100) + '...'\r\n                  : 'No description provided.'}\r\n              </p>\r\n              <p className=\"gig-price\">\r\n                ðŸ’° {gig.price || gig.budget || 0} USD\r\n              </p>\r\n              {(gig.postedBy._id === user._id || user.role === 'admin') && (\r\n              <div className=\"gig-actions\">\r\n                \r\n                <button\r\n                  className=\"edit-btn\"\r\n                  onClick={() => navigate(`/edit-gig/${gig._id}`)}\r\n                >\r\n                  <FaEdit /> Edit\r\n                </button>\r\n                <button\r\n                  className=\"delete-btn\"\r\n                  onClick={() => handleDelete(gig._id)}\r\n                >\r\n                  <FaTrash /> Delete\r\n                </button>\r\n              </div>\r\n              )}\r\n            </div>\r\n            \r\n          ))\r\n        ) : (\r\n          <p className=\"no-gigs\">No gigs available yet.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n  {/*import React, { useEffect, useState } from 'react';\r\n  import { getGigs } from '../services/api';\r\n  import { useNavigate } from 'react-router-dom';\r\n  import { deleteGig } from '../services/api';\r\n  function handleDelete(id) {\r\n  if (window.confirm('Are you sure you want to delete this gig?')) {\r\n    deleteGig(id)\r\n      .then(() => window.location.reload()) // Or: re-fetch gigs to update the list\r\n      .catch(err => alert('Delete failed'));\r\n  }\r\n  }\r\n  export default function Gigs() {\r\n  const [gigs, setGigs] = useState([]);\r\n  const [error, setError] = useState('');\r\n    useEffect(() => {\r\n    getGigs()\r\n      .then(res => setGigs(res.data))\r\n      .catch(err => setError(err.response?.data?.message || 'Failed to load gigs'));\r\n  }, []);\r\n  const navigate = useNavigate();\r\n    return (\r\n    <div style={{ margin: '20px' }}>\r\n      <h1>Available Gigs</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <ul>\r\n        {gigs.length > 0 ? (\r\n          gigs.map(gig => (\r\n            <li key={gig._id}>\r\n              <strong style={{ cursor: 'pointer', textDecoration: 'underline' }} onClick={() => navigate(`/gigs/${gig._id}`)}>\r\n                {gig.title}\r\n              </strong> â€“ {gig.price} USD\r\n              <button onClick={() => navigate(`/edit-gig/${gig._id}`)}>Edit</button>\r\n              <button style={{ marginLeft: '10px', color: 'red' }} onClick={() => handleDelete(gig._id)}>Delete</button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No gigs available yet.</p>\r\n        )}\r\n      </ul>\r\n      <button onClick={() => navigate(-1)}>Back</button>\r\n    </div>\r\n  );\r\n  }\r\n  */\n}\n_s(Gigs, \"JFPwJUAPSxnIPEiR1B+WIvRghcU=\", false, function () {\n  return [useNavigate];\n});\n_c = Gigs;\nvar _c;\n$RefreshReg$(_c, \"Gigs\");","map":{"version":3,"names":["React","useEffect","useState","getGigs","deleteGig","useNavigate","FaEdit","FaTrash","FaArrowLeft","FaBriefcase","useContext","AuthContext","Gigs","_s","gigs","setGigs","error","setError","navigate","user","_c","$RefreshReg$"],"sources":["E:/C/Projects/GigConnect Zaalima/gigconnect/frontend/src/pages/Gigs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getGigs, deleteGig } from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Gigs.css';\r\nimport { FaEdit, FaTrash, FaArrowLeft, FaBriefcase } from 'react-icons/fa';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\n\r\nexport default function Gigs() {\r\n  const [gigs, setGigs] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n  const { user } = useContext(AuthContext);\r\n\r\n  /*const fetchGigs = () => {\r\n    getGigs()\r\n      .then((res) => setGigs(res.data))\r\n      .catch((err) =>\r\n        setError(err.response?.data?.message || 'Failed to load gigs')\r\n      );\r\n  };\r\n  const fetchGigs = () => {\r\n    getGigs()\r\n      .then((res) => {\r\n        let gigsData;\r\n\r\n        if (user.role === 'client') {\r\n          // Clients see only their own gigs\r\n          gigsData = res.data.filter((gig) => gig.postedBy._id === user._id);\r\n        } else {\r\n          // Other roles see all gigs\r\n          gigsData = res.data;\r\n        }\r\n\r\n        setGigs(gigsData);\r\n      })\r\n      .catch((err) =>\r\n        setError(err.response?.data?.message || 'Failed to load gigs')\r\n      );\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchGigs();\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this gig?')) {\r\n      deleteGig(id)\r\n        .then(() => fetchGigs())\r\n        .catch(() => alert('Delete failed'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gigs-container\">\r\n      <div className=\"gigs-header\">\r\n        <h1>\r\n          <FaBriefcase /> Available Gigs\r\n        </h1>\r\n        <button className=\"back-btn\" onClick={() => navigate(-1)}>\r\n          <FaArrowLeft /> Back\r\n        </button>\r\n      </div>\r\n\r\n      {error && <div className=\"error-box\">{error}</div>}\r\n\r\n      <div className=\"gig-list\">\r\n        {gigs.length > 0 ? (\r\n          gigs.map((gig) => (\r\n            <div key={gig._id} className=\"gig-card\" onClick={() => navigate(`/gigs/${gig._id}`)}>\r\n              <h3 className=\"gig-title\">\r\n                {gig.title}\r\n              </h3>\r\n              <p className=\"gig-desc\">\r\n                {gig.description\r\n                  ? gig.description.substring(0, 100) + '...'\r\n                  : 'No description provided.'}\r\n              </p>\r\n              <p className=\"gig-price\">\r\n                ðŸ’° {gig.price || gig.budget || 0} USD\r\n              </p>\r\n              {(gig.postedBy._id === user._id || user.role === 'admin') && (\r\n              <div className=\"gig-actions\">\r\n                \r\n                <button\r\n                  className=\"edit-btn\"\r\n                  onClick={() => navigate(`/edit-gig/${gig._id}`)}\r\n                >\r\n                  <FaEdit /> Edit\r\n                </button>\r\n                <button\r\n                  className=\"delete-btn\"\r\n                  onClick={() => handleDelete(gig._id)}\r\n                >\r\n                  <FaTrash /> Delete\r\n                </button>\r\n              </div>\r\n              )}\r\n            </div>\r\n            \r\n          ))\r\n        ) : (\r\n          <p className=\"no-gigs\">No gigs available yet.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n{/*import React, { useEffect, useState } from 'react';\r\nimport { getGigs } from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { deleteGig } from '../services/api';\r\n\r\nfunction handleDelete(id) {\r\n  if (window.confirm('Are you sure you want to delete this gig?')) {\r\n    deleteGig(id)\r\n      .then(() => window.location.reload()) // Or: re-fetch gigs to update the list\r\n      .catch(err => alert('Delete failed'));\r\n  }\r\n}\r\n\r\nexport default function Gigs() {\r\n  const [gigs, setGigs] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    getGigs()\r\n      .then(res => setGigs(res.data))\r\n      .catch(err => setError(err.response?.data?.message || 'Failed to load gigs'));\r\n  }, []);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div style={{ margin: '20px' }}>\r\n      <h1>Available Gigs</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <ul>\r\n        {gigs.length > 0 ? (\r\n          gigs.map(gig => (\r\n            <li key={gig._id}>\r\n              <strong style={{ cursor: 'pointer', textDecoration: 'underline' }} onClick={() => navigate(`/gigs/${gig._id}`)}>\r\n                {gig.title}\r\n              </strong> â€“ {gig.price} USD\r\n              <button onClick={() => navigate(`/edit-gig/${gig._id}`)}>Edit</button>\r\n              <button style={{ marginLeft: '10px', color: 'red' }} onClick={() => handleDelete(gig._id)}>Delete</button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No gigs available yet.</p>\r\n        )}\r\n      </ul>\r\n      <button onClick={() => navigate(-1)}>Back</button>\r\n    </div>\r\n  );\r\n}\r\n*/}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,SAAS,QAAQ,iBAAiB;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,oBAAoB;AAC3B,SAASC,MAAM,EAAEC,OAAO,EAAEC,WAAW,EAAEC,WAAW,QAAQ,gBAAgB;AAC1E,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,wBAAwB;AAGpD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMgB,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEc;EAAK,CAAC,GAAGT,UAAU,CAACC,WAAW,CAAC;;EAExrJqBD,IAAI;EAAA,QAGTP,WAAW;AAAA;AAAAe,EAAA,GAHNR,IAAI;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}