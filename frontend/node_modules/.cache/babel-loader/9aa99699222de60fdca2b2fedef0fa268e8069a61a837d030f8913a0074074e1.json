{"ast":null,"code":"{/*import React, { useEffect, useState } from 'react';\r\n import { getGigs } from '../services/api';\r\n import { useNavigate } from 'react-router-dom';\r\n import { deleteGig } from '../services/api';\r\n \n function handleDelete(id) {\r\n  if (window.confirm('Are you sure you want to delete this gig?')) {\r\n    deleteGig(id)\r\n      .then(() => window.location.reload()) // Or: re-fetch gigs to update the list\r\n      .catch(err => alert('Delete failed'));\r\n  }\r\n }\r\n \n export default function Gigs() {\r\n  const [gigs, setGigs] = useState([]);\r\n  const [error, setError] = useState('');\r\n \n  useEffect(() => {\r\n    getGigs()\r\n      .then(res => setGigs(res.data))\r\n      .catch(err => setError(err.response?.data?.message || 'Failed to load gigs'));\r\n  }, []);\r\n  const navigate = useNavigate();\r\n \n  return (\r\n    <div style={{ margin: '20px' }}>\r\n      <h1>Available Gigs</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <ul>\r\n        {gigs.length > 0 ? (\r\n          gigs.map(gig => (\r\n            <li key={gig._id}>\r\n              <strong style={{ cursor: 'pointer', textDecoration: 'underline' }} onClick={() => navigate(`/gigs/${gig._id}`)}>\r\n                {gig.title}\r\n              </strong> – {gig.price} USD\r\n              <button onClick={() => navigate(`/edit-gig/${gig._id}`)}>Edit</button>\r\n              <button style={{ marginLeft: '10px', color: 'red' }} onClick={() => handleDelete(gig._id)}>Delete</button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No gigs available yet.</p>\r\n        )}\r\n      </ul>\r\n      <button onClick={() => navigate(-1)}>Back</button>\r\n    </div>\r\n  );\r\n }\r\n */}","map":{"version":3,"names":[],"sources":["E:/C/Projects/GigConnect Zaalima/gigconnect/frontend/src/pages/Gigs.js"],"sourcesContent":["{/*import React, { useEffect, useState } from 'react';\r\nimport { getGigs } from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { deleteGig } from '../services/api';\r\n\r\nfunction handleDelete(id) {\r\n  if (window.confirm('Are you sure you want to delete this gig?')) {\r\n    deleteGig(id)\r\n      .then(() => window.location.reload()) // Or: re-fetch gigs to update the list\r\n      .catch(err => alert('Delete failed'));\r\n  }\r\n}\r\n\r\nexport default function Gigs() {\r\n  const [gigs, setGigs] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    getGigs()\r\n      .then(res => setGigs(res.data))\r\n      .catch(err => setError(err.response?.data?.message || 'Failed to load gigs'));\r\n  }, []);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div style={{ margin: '20px' }}>\r\n      <h1>Available Gigs</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <ul>\r\n        {gigs.length > 0 ? (\r\n          gigs.map(gig => (\r\n            <li key={gig._id}>\r\n              <strong style={{ cursor: 'pointer', textDecoration: 'underline' }} onClick={() => navigate(`/gigs/${gig._id}`)}>\r\n                {gig.title}\r\n              </strong> – {gig.price} USD\r\n              <button onClick={() => navigate(`/edit-gig/${gig._id}`)}>Edit</button>\r\n              <button style={{ marginLeft: '10px', color: 'red' }} onClick={() => handleDelete(gig._id)}>Delete</button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No gigs available yet.</p>\r\n        )}\r\n      </ul>\r\n      <button onClick={() => navigate(-1)}>Back</button>\r\n    </div>\r\n  );\r\n}\r\n*/}"],"mappings":"AAAA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA/CC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}