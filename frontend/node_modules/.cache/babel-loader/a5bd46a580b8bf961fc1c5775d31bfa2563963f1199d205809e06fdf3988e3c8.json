{"ast":null,"code":"{/*import React, { useEffect, useState } from 'react';\r\n import { updateGig, getGigs } from '../services/api';\r\n import { useParams, useNavigate } from 'react-router-dom';\r\n \n export default function EditGig() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState({ title: '', description: '', price: '', category: '' });\r\n  const [error, setError] = useState('');\r\n \n  useEffect(() => {\r\n    // Optionally fetch the gig details if not available\r\n    getGigs()\r\n      .then(res => {\r\n        const gig = res.data.find(g => g._id === id);\r\n        if (gig) setForm(gig);\r\n      })\r\n      .catch(() => setError('Not found'));\r\n  }, [id]);\r\n \n  function handleChange(e) {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  }\r\n \n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    updateGig(id, form)\r\n      .then(() => navigate('/gigs'))\r\n      .catch(err => setError('Update failed'));\r\n  }\r\n \n  return (\r\n    <div>\r\n      <h2>Edit Gig</h2>\r\n      {error && <div style={{color: 'red'}}>{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"title\" value={form.title} onChange={handleChange} required />\r\n        <textarea name=\"description\" value={form.description} onChange={handleChange} required />\r\n        <input name=\"price\" value={form.price} onChange={handleChange} type=\"number\" required />\r\n        <input name=\"category\" value={form.category} onChange={handleChange} required />\r\n        <button type=\"submit\">Update</button>\r\n      </form>\r\n    </div>\r\n  );\r\n }\r\n */}","map":{"version":3,"names":[],"sources":["E:/C/Projects/GigConnect Zaalima/gigconnect/frontend/src/pages/EditGig.js"],"sourcesContent":["{/*import React, { useEffect, useState } from 'react';\r\nimport { updateGig, getGigs } from '../services/api';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nexport default function EditGig() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState({ title: '', description: '', price: '', category: '' });\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Optionally fetch the gig details if not available\r\n    getGigs()\r\n      .then(res => {\r\n        const gig = res.data.find(g => g._id === id);\r\n        if (gig) setForm(gig);\r\n      })\r\n      .catch(() => setError('Not found'));\r\n  }, [id]);\r\n\r\n  function handleChange(e) {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    updateGig(id, form)\r\n      .then(() => navigate('/gigs'))\r\n      .catch(err => setError('Update failed'));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Gig</h2>\r\n      {error && <div style={{color: 'red'}}>{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"title\" value={form.title} onChange={handleChange} required />\r\n        <textarea name=\"description\" value={form.description} onChange={handleChange} required />\r\n        <input name=\"price\" value={form.price} onChange={handleChange} type=\"number\" required />\r\n        <input name=\"category\" value={form.category} onChange={handleChange} required />\r\n        <button type=\"submit\">Update</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n*/}"],"mappings":"AAAA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA7CC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}