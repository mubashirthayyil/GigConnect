{"ast":null,"code":"{/*import React, { useEffect, useState } from 'react';\r\n import { getGigById, applyToGig } from '../services/api';\r\n import { useParams, useNavigate } from 'react-router-dom';\r\n \n export default function GigDetail() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [gig, setGig] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [applyMsg, setApplyMsg] = useState('');\r\n  \r\n  function handleApply() {\r\n    applyToGig(id)\r\n      .then(res => setApplyMsg(res.data.message))\r\n      .catch(err => setApplyMsg(err.response?.data?.message || 'Error'));\r\n  }\r\n \n  useEffect(() => {\r\n    getGigById(id)\r\n      .then(res => setGig(res.data))\r\n      .catch(() => setError('Gig not found'));\r\n  }, [id]);\r\n \n  if (error) return <div>{error}</div>;\r\n  if (!gig) return <div>Loading...</div>;\r\n \n  return (\r\n    <div style={{ margin: '20px' }}>\r\n      <h2>{gig.title}</h2>\r\n      <p><strong>Description:</strong> {gig.description}</p>\r\n      <p><strong>Price:</strong> {gig.price} USD</p>\r\n      <p><strong>Category:</strong> {gig.category}</p>\r\n      <button onClick={handleApply}>Apply for Gig</button>\r\n        {applyMsg && <p>{applyMsg}</p>}\r\n      <button onClick={() => navigate(-1)}>Back</button>\r\n      {/*{gig.status === 'open' && gig.postedBy !== user._id && (\r\n        <button onClick={handleApply}>Apply for Gig</button>\r\n      )}/}\r\n    </div>\r\n  );\r\n }\r\n */}","map":{"version":3,"names":[],"sources":["E:/C/Projects/GigConnect Zaalima/gigconnect/frontend/src/pages/GigDetail.js"],"sourcesContent":["{/*import React, { useEffect, useState } from 'react';\r\nimport { getGigById, applyToGig } from '../services/api';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nexport default function GigDetail() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [gig, setGig] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [applyMsg, setApplyMsg] = useState('');\r\n  \r\n  function handleApply() {\r\n    applyToGig(id)\r\n      .then(res => setApplyMsg(res.data.message))\r\n      .catch(err => setApplyMsg(err.response?.data?.message || 'Error'));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGigById(id)\r\n      .then(res => setGig(res.data))\r\n      .catch(() => setError('Gig not found'));\r\n  }, [id]);\r\n\r\n  if (error) return <div>{error}</div>;\r\n  if (!gig) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div style={{ margin: '20px' }}>\r\n      <h2>{gig.title}</h2>\r\n      <p><strong>Description:</strong> {gig.description}</p>\r\n      <p><strong>Price:</strong> {gig.price} USD</p>\r\n      <p><strong>Category:</strong> {gig.category}</p>\r\n      <button onClick={handleApply}>Apply for Gig</button>\r\n        {applyMsg && <p>{applyMsg}</p>}\r\n      <button onClick={() => navigate(-1)}>Back</button>\r\n      {/*{gig.status === 'open' && gig.postedBy !== user._id && (\r\n        <button onClick={handleApply}>Apply for Gig</button>\r\n      )}/}\r\n    </div>\r\n  );\r\n}\r\n*/}"],"mappings":"AAAA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAzCC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}