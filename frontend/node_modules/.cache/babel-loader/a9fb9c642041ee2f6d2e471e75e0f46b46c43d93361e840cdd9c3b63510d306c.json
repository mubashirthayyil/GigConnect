{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { postGig } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, TextField, Typography, Container, Box } from '@mui/material';\nexport default function CreateGig() {\n  _s();\n  const [form, setForm] = useState({\n    title: '',\n    description: '',\n    price: '',\n    category: ''\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  function handleChange(e) {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    postGig(form).then(() => {\n      alert('Gig posted successfully!');\n      navigate('/create-gig');\n    }).catch(err => {\n      var _err$response, _err$response$data;\n      return setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Posting failed');\n    });\n  }\n  return {/*<div style={{ margin: '20px' }}>\r\n           <h1>Post a New Gig</h1>\r\n           {error && <p style={{ color: 'red' }}>{error}</p>}\r\n           <form onSubmit={handleSubmit}>\r\n             <input name=\"title\" placeholder=\"Gig Title\" value={form.title} onChange={handleChange} required />\r\n             <textarea name=\"description\" placeholder=\"Gig Description\" value={form.description} onChange={handleChange} required />\r\n             <input name=\"price\" type=\"number\" placeholder=\"Price\" value={form.price} onChange={handleChange} required />\r\n             <input name=\"category\" placeholder=\"Category\" value={form.category} onChange={handleChange} required />\r\n             <button type=\"submit\">Post Gig</button>\r\n           </form>\r\n          </div>*/};\n}\n_s(CreateGig, \"A0ay/kS74G9U0crduime7QH9LTg=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateGig;\nvar _c;\n$RefreshReg$(_c, \"CreateGig\");","map":{"version":3,"names":["React","useState","postGig","useNavigate","Button","TextField","Typography","Container","Box","CreateGig","_s","form","setForm","title","description","price","category","error","setError","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","then","alert","catch","err","_err$response","_err$response$data","response","data","message","_c","$RefreshReg$"],"sources":["E:/C/Projects/GigConnect Zaalima/gigconnect/frontend/src/pages/CreateGig.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { postGig } from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, TextField, Typography, Container, Box } from '@mui/material';\r\n\r\nexport default function CreateGig() {\r\n  const [form, setForm] = useState({\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n    category: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  function handleChange(e) {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    postGig(form)\r\n      .then(() => {\r\n        alert('Gig posted successfully!');\r\n        navigate('/create-gig');\r\n      })\r\n      .catch(err => setError(err.response?.data?.message || 'Posting failed'));\r\n  }\r\n\r\n  return (\r\n    \r\n    {/*<div style={{ margin: '20px' }}>\r\n      <h1>Post a New Gig</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"title\" placeholder=\"Gig Title\" value={form.title} onChange={handleChange} required />\r\n        <textarea name=\"description\" placeholder=\"Gig Description\" value={form.description} onChange={handleChange} required />\r\n        <input name=\"price\" type=\"number\" placeholder=\"Price\" value={form.price} onChange={handleChange} required />\r\n        <input name=\"category\" placeholder=\"Category\" value={form.category} onChange={handleChange} required />\r\n        <button type=\"submit\">Post Gig</button>\r\n      </form>\r\n    </div>*/}\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAEC,GAAG,QAAQ,eAAe;AAE7E,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAC/BY,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,SAASiB,YAAYA,CAACC,CAAC,EAAE;IACvBT,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACU,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACvD;EAEA,SAASC,YAAYA,CAACJ,CAAC,EAAE;IACvBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBxB,OAAO,CAACS,IAAI,CAAC,CACVgB,IAAI,CAAC,MAAM;MACVC,KAAK,CAAC,0BAA0B,CAAC;MACjCT,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,CAAC,CACDU,KAAK,CAACC,GAAG;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MAAA,OAAId,QAAQ,CAAC,EAAAa,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI,gBAAgB,CAAC;IAAA,EAAC;EAC5E;EAEA,OAEE,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAVK,CAUQ;AAEb;AAACzB,EAAA,CAtCuBD,SAAS;EAAA,QAQdN,WAAW;AAAA;AAAAiC,EAAA,GARN3B,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}