{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: '/api'\n});\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const registerUser = user => API.post('/users/register', user);\nexport const loginUser = credentials => API.post('/users/login', credentials);\nexport const getGigById = id => API.get(`/gigs/${id}`);\nexport const getGigs = () => API.get('/gigs');\nexport const postGig = data => API.post('/gigs', data);\nexport const updateGig = (id, data) => API.put(`/gigs/${id}`, data);\nexport const deleteGig = id => API.delete(`/gigs/${id}`);\nexport const getProfile = () => API.get('/users/me');\nexport const applyToGig = (gigId, coverLetter) => API.post(`/gigs/${gigId}/apply`, {\n  gigId,\n  coverLetter\n});\nexport const fetchClientApplications = () => API.get('/gigs/client/applications');\nexport const updateApplicationStatus = (id, status) => API.put(`/gigs/applications/${id}`, {\n  status\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","registerUser","user","post","loginUser","credentials","getGigById","id","get","getGigs","postGig","data","updateGig","put","deleteGig","delete","getProfile","applyToGig","gigId","coverLetter","fetchClientApplications","updateApplicationStatus","status"],"sources":["E:/C/Projects/GigConnect Zaalima/gigconnect/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: '/api' });\r\n\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const registerUser = (user) => API.post('/users/register', user);\r\nexport const loginUser = (credentials) => API.post('/users/login', credentials);\r\n\r\nexport const getGigById = (id) => API.get(`/gigs/${id}`);\r\nexport const getGigs = () => API.get('/gigs');\r\nexport const postGig = (data) => API.post('/gigs', data);\r\nexport const updateGig = (id, data) => API.put(`/gigs/${id}`, data);\r\nexport const deleteGig = (id) => API.delete(`/gigs/${id}`);\r\n\r\nexport const getProfile = () => API.get('/users/me');\r\nexport const applyToGig = (gigId, coverLetter) => \r\n  API.post(`/gigs/${gigId}/apply`, { gigId, coverLetter });\r\nexport const fetchClientApplications = () => API.get('/gigs/client/applications');\r\nexport const updateApplicationStatus = (id, status) => API.put(`/gigs/applications/${id}`, { status });\r\n\r\nexport default API;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAO,CAAC,CAAC;AAE7CF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,YAAY,GAAIC,IAAI,IAAKZ,GAAG,CAACa,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;AACvE,OAAO,MAAME,SAAS,GAAIC,WAAW,IAAKf,GAAG,CAACa,IAAI,CAAC,cAAc,EAAEE,WAAW,CAAC;AAE/E,OAAO,MAAMC,UAAU,GAAIC,EAAE,IAAKjB,GAAG,CAACkB,GAAG,CAAC,SAASD,EAAE,EAAE,CAAC;AACxD,OAAO,MAAME,OAAO,GAAGA,CAAA,KAAMnB,GAAG,CAACkB,GAAG,CAAC,OAAO,CAAC;AAC7C,OAAO,MAAME,OAAO,GAAIC,IAAI,IAAKrB,GAAG,CAACa,IAAI,CAAC,OAAO,EAAEQ,IAAI,CAAC;AACxD,OAAO,MAAMC,SAAS,GAAGA,CAACL,EAAE,EAAEI,IAAI,KAAKrB,GAAG,CAACuB,GAAG,CAAC,SAASN,EAAE,EAAE,EAAEI,IAAI,CAAC;AACnE,OAAO,MAAMG,SAAS,GAAIP,EAAE,IAAKjB,GAAG,CAACyB,MAAM,CAAC,SAASR,EAAE,EAAE,CAAC;AAE1D,OAAO,MAAMS,UAAU,GAAGA,CAAA,KAAM1B,GAAG,CAACkB,GAAG,CAAC,WAAW,CAAC;AACpD,OAAO,MAAMS,UAAU,GAAGA,CAACC,KAAK,EAAEC,WAAW,KAC3C7B,GAAG,CAACa,IAAI,CAAC,SAASe,KAAK,QAAQ,EAAE;EAAEA,KAAK;EAAEC;AAAY,CAAC,CAAC;AAC1D,OAAO,MAAMC,uBAAuB,GAAGA,CAAA,KAAM9B,GAAG,CAACkB,GAAG,CAAC,2BAA2B,CAAC;AACjF,OAAO,MAAMa,uBAAuB,GAAGA,CAACd,EAAE,EAAEe,MAAM,KAAKhC,GAAG,CAACuB,GAAG,CAAC,sBAAsBN,EAAE,EAAE,EAAE;EAAEe;AAAO,CAAC,CAAC;AAEtG,eAAehC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}